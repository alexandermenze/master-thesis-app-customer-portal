// <auto-generated />
using System;
using CustomerPortal.UserAuthService.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomerPortal.UserAuthService.Postgres.Migrations
{
    [DbContext(typeof(UserAuthContext))]
    [Migration("20250418072018_AddCustomerNoOnApprove")]
    partial class AddCustomerNoOnApprove
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerPortal.UserAuthService.Domain.Aggregates.SessionToken", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SessionToken");
                });

            modelBuilder.Entity("CustomerPortal.UserAuthService.Domain.Aggregates.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int?>("CustomerNo")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .UseCollation("customerportalemailci");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHashWithSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CustomerPortal.UserAuthService.Domain.Aggregates.SessionToken", b =>
                {
                    b.HasOne("CustomerPortal.UserAuthService.Domain.Aggregates.User", null)
                        .WithMany("SessionTokens")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CustomerPortal.UserAuthService.Domain.Aggregates.User", b =>
                {
                    b.Navigation("SessionTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
